#include <zephyr/dt-bindings/input/input-event-codes.h>

#define BASE 0
#define LOWER 1
#define UPPER 2
#define FUNC 3
#define CONF 4
#define MOUSE_KEYS 5
#define MOUSE_TP 6
#define MOUSE_TP_KEYS 7
#define MOUSE_TP_SET 8

#ifdef HAS_UROB

#define HAS_TRI_STATE
#define HAS_NUM_WORD

#endif

#define HAS_MOUSE_KEYS
#define HAS_MOUSE_TP
#define HAS_TRI_STATE

// ZMK includes
// Personal includes

#include "includes/mouse_keys.dtsi"
#include "includes/mouse_tp.dtsi"
#include "includes/mouse_tp_badjeff_input_listener.dtsi"
#include <dt-bindings/zmk/mouse.h>
#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

//#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp N1         &kp N2             &kp N3             &kp DE_N4  &kp N5           &kp N6          &kp DE_N7  &kp DE_N8          &kp DE_N9      &kp DE_N0          &kp DE_SHARP_S   &kp DE_POUND
&kp TAB        &kp Q              &kp W              &kp E      &kp R            &kp T           &kp Z      &mt DE_U_UMLAUT U  &kp I          &mt DE_O_UMLAUT O  &kp P            &kp BACKSPACE
&kp LESS_THAN  &mt DE_A_UMLAUT A  &kp S              &kp D      &kp F            &kp G           &kp H      &kp J              &kp DE_K       &kp L              &kp DE_O_UMLAUT  &kp ENTER
&mo 1          &kp Y              &kp X              &kp C      &kp V            &kp B           &kp N      &kp M              &kp SEMICOLON  &kp DE_PERIOD      &kp MINUS        &mo 1
&kp ESCAPE     &kp LEFT_WIN                                     &mo 2            &mo 4           &kp SPACE  &mo 2                                                &kp DE_PLUS      &mo 3
               &kp LA(C_MUTE)     &kp C_VOLUME_DOWN  &none      &kp C_VOLUME_UP  &kp LA(K_MUTE)  &none      &none              &none          &none              &none
            >;
        };

        shift_layer {
            bindings = <
&kp LS(DE_N1)     &kp LS(DE_N2)              &kp LS(DE_N3)  &kp LS(DE_N4)  &kp LS(DE_N5)  &kp LS(DE_N6)  &kp LS(DE_N7)  &kp LS(DE_N8)              &kp LS(DE_N9)  &kp LS(DE_N0)              &kp LS(DE_SHARP_S)   &kp LS(DE_HASH)
&trans            &kp LS(Q)                  &kp LS(W)      &kp LS(E)      &kp LS(R)      &kp LS(T)      &kp LS(Z)      &mt LS(DE_U_UMLAUT) LS(U)  &kp LS(I)      &mt LS(DE_O_UMLAUT) LS(O)  &kp LS(P)            &trans
&kp GREATER_THAN  &mt LS(DE_A_UMLAUT) LS(A)  &kp LS(S)      &kp LS(D)      &kp LS(F)      &kp LS(G)      &kp LS(H)      &kp LS(J)                  &kp LS(K)      &kp LS(L)                  &kp LS(DE_O_UMLAUT)  &trans
&trans            &kp LS(Y)                  &kp LS(X)      &kp LS(C)      &kp LS(V)      &kp LS(B)      &kp LS(N)      &kp LS(M)                  &kp SEMI       &kp COLON                  &kp UNDER            &trans
&trans            &trans                                                   &trans         &trans         &trans         &trans                                                               &kp LS(DE_PLUS)      &trans
                  &trans                     &trans         &trans         &trans         &trans         &trans         &trans                     &trans         &trans                     &trans
            >;
        };

        alt_layer {
            bindings = <
&none        &kp LA(DE_N2)   &kp LA(DE_N3)  &none     &none         &none   &kp LA(DE_N7)  &kp LA(DE_N8)   &kp LA(DE_N9)   &kp LA(DE_N0)     &kp LA(DE_SHARP_S)  &kp DE_GRAVE
&none        &kp DE_AT_SIGN  &none          &kp LBRC  &kp RBRC      &none   &none          &none           &kp UP_ARROW    &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp INS
&kp DE_PIPE  &none           &none          &kp LPAR  &kp RPAR      &none   &none          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &none               &none
&kp F1       &kp F2          &kp F3         &kp F4    &kp F5        &kp F6  &kp F7         &kp F8          &kp F9          &kp F10           &kp F11             &kp F12
&trans       &trans                                   &trans        &trans  &trans         &trans                                            &kp LALT            &kp RGUI
             &none           &kp C_BRI_DN   &none     &kp C_BRI_UP  &none   &none          &none           &none           &none             &none
            >;
        };

        config_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &ext_power EP_ON             &ext_power EP_OFF       &none                        &none                          &none  &mms MS_RESET
&bt BT_NXT    &none           &none         &none         &none         &none  &mms MS_TP_SENSITIVITY_INCR  &mms MS_TP_VALUE6_INCR  &mms MS_TP_NEG_INERTIA_INCR  &mms MS_TP_PTS_THRESHOLD_INCR  &none  &none
&none         &bt BT_CLR_ALL  &none         &none         &none         &none  &mms MS_TP_SENSITIVITY_DECR  &mms MS_TP_VALUE6_DECR  &mms MS_TP_NEG_INERTIA_DECR  &mms MS_TP_PTS_THRESHOLD_DECR  &none  &mms MS_LOG
&none         &none           &none         &bt BT_CLR    &none         &none  &none                        &none                   &none                        &none                          &none  &none
&none         &none                                       &none         &none  &bootloader                  &none                                                                               &none  &trans
              &none           &none         &none         &none         &none  &none                        &none                   &none                        &none                          &none
            >;
        };

        MouseKeys_layer {
            bindings = <
&none        &none  &none      &none      &none      &none           &none      &none           &none           &none            &none  &none
&none        &none  &none      &none      &none      &none           &none      &none           &mmv MOVE_UP    &none            &none  &none
&mkp MB4     &none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &msc SCRL_UP    &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&none        &none  &none      &none      &none      &msc SCRL_DOWN  &none      &none           &none           &none            &none  &none
&bootloader  &none                        &none      &trans          &kp RCTRL  &kp RIGHT_ALT                                    &none  &none
             &none  &none      &none      &none      &none           &none      &none           &none           &none            &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conf {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
