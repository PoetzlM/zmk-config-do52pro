#include <zephyr/dt-bindings/input/input-event-codes.h>

#define BASE 0
#define LOWER 1
#define UPPER 2
#define FUNC 3
#define CONF 4
#define MOUSE_KEYS 5
#define MOUSE_TP 6
#define MOUSE_TP_KEYS 7
#define MOUSE_TP_SET 8

#ifdef HAS_UROB

#define HAS_TRI_STATE
#define HAS_NUM_WORD

#endif

#define HAS_MOUSE_KEYS
#define HAS_MOUSE_TP
#define HAS_TRI_STATE

// ZMK includes
// Personal includes

#include "includes/mouse_keys.dtsi"
#include "includes/mouse_tp.dtsi"
#include "includes/mouse_tp_badjeff_input_listener.dtsi"
#include <dt-bindings/zmk/mouse.h>
#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

//#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp DE_N1         &kp DE_N2     &kp DE_N3  &kp DE_N4  &kp DE_N5  &kp DE_N6  &kp DE_N7  &kp DE_N8  &kp DE_N9     &kp DE_N0      &kp DE_SHARP_S   &kp DE_HASH
&kp TAB           &kp DE_Q      &kp DE_W   &kp DE_E   &kp DE_R   &kp DE_T   &kp DE_Z   &kp DE_U   &kp DE_I      &kp DE_O       &kp DE_P         &kp BACKSPACE
&kp DE_LESS_THAN  &kp DE_A      &kp DE_S   &kp DE_D   &kp DE_F   &kp DE_G   &kp DE_H   &kp DE_J   &kp DE_K      &kp DE_L       &kp DE_O_UMLAUT  &kp ENTER
&kp LSHIFT        &kp DE_Y      &kp DE_X   &kp DE_C   &kp DE_V   &kp DE_B   &kp DE_N   &kp DE_M   &kp DE_COMMA  &kp DE_PERIOD  &kp DE_MINUS     &kp RIGHT_SHIFT
&kp ESCAPE        &kp LEFT_WIN                        &kp A      &mo 3      &kp SPACE  &kp A                                   &kp DE_PLUS      &kp A
                  &kp B         &kp A      &none      &kp A      &kp B      &none      &kp A      &none         &kp A          &none
            >;
        };

        upper_layer {
            bindings = <
&none        &kp LA(DE_N2)    &kp LA(DE_N3)  &kp DE_LEFT_BRACKET      &kp DE_RIGHT_BRACKET      &none   &kp LA(DE_N7)  &kp LA(DE_N8)   &kp LA(DE_N9)   &kp LA(DE_N0)    &kp LA(DE_SHARP_S)  &kp DE_GRAVE
&none        &kp LA(DE_Q)     &none          &kp DE_LEFT_BRACE        &kp DE_RIGHT_BRACE        &none   &none          &none           &kp UP_ARROW    &kp DE_O_UMLAUT  &none               &kp INS
&kp DE_PIPE  &kp DE_A_UMLAUT  &none          &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &none   &none          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none               &none
&kp F1       &kp F2           &kp F3         &kp F4                   &kp F5                    &kp F6  &kp F7         &kp F8          &kp F9          &kp F10          &kp F11             &kp F12
&trans       &trans                                                   &trans                    &trans  &trans         &trans                                           &kp LALT            &kp RGUI
             &none            &kp C_BRI_DN   &none                    &kp C_BRI_UP              &none   &none          &none           &none           &none            &none
            >;
        };

        config_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &ext_power EP_ON             &ext_power EP_OFF       &none                        &none                          &none  &mms MS_RESET
&bt BT_NXT    &none           &none         &none         &none         &none  &mms MS_TP_SENSITIVITY_INCR  &mms MS_TP_VALUE6_INCR  &mms MS_TP_NEG_INERTIA_INCR  &mms MS_TP_PTS_THRESHOLD_INCR  &none  &none
&none         &bt BT_CLR_ALL  &none         &none         &none         &none  &mms MS_TP_SENSITIVITY_DECR  &mms MS_TP_VALUE6_DECR  &mms MS_TP_NEG_INERTIA_DECR  &mms MS_TP_PTS_THRESHOLD_DECR  &none  &mms MS_LOG
&none         &none           &none         &bt BT_CLR    &none         &none  &none                        &none                   &none                        &none                          &none  &none
&none         &none                                       &none         &none  &bootloader                  &none                                                                               &none  &trans
              &none           &none         &none         &none         &none  &none                        &none                   &none                        &none                          &none
            >;
        };

        MouseKeys_layer {
            bindings = <
&none        &none  &none      &none      &none      &none           &none      &none           &none           &none            &none  &none
&none        &none  &none      &none      &none      &none           &none      &none           &mmv MOVE_UP    &none            &none  &none
&mkp MB4     &none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &msc SCRL_UP    &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&none        &none  &none      &none      &none      &msc SCRL_DOWN  &none      &none           &none           &none            &none  &none
&bootloader  &none                        &none      &trans          &kp RCTRL  &kp RIGHT_ALT                                    &none  &none
             &none  &none      &none      &none      &none           &none      &none           &none           &none            &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conf {
            if-layers = <1 1>;
            then-layer = <2>;
        };
    };
};
